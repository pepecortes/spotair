debug = true

[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
  [entryPoints.https.tls]
  [entryPoints.dbadmin]
    address = ":8081"

[retry]

[docker]
endpoint = "unix:///var/run/docker.sock"
domain = "cloud.spotair.org"
watch = true
exposedByDefault = false

[acme]
email = "webmaster@spotair.org"
storage = "acme.json"
entryPoint = "https"
acmeLogging = false
onHostRule = true

# CA server to use.
# Uncomment the line to use Let's Encrypt's staging server,
# leave commented to go to prod.
#
# Optional
# Default: "https://acme-v02.api.letsencrypt.org/directory"
#
#caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

# OVH variables...
# OVH_ENDPOINT, OVH_APPLICATION_KEY, OVH_APPLICATION_SECRET, OVH_CONSUMER_KEY
# tutorial ovh traefik: https://medium.com/nephely/configure-traefik-for-the-dns-01-challenge-with-ovh-as-dns-provider-c737670c0434
# where to create tokens: https://eu.api.ovh.com/createToken/
# where to create keys: https://eu.api.ovh.com/createApp/
# info: https://certbot-dns-ovh.readthedocs.io/en/stable/
# info: https://go-acme.github.io/lego/dns/ovh/

# Use a DNS-01 ACME challenge rather than HTTP-01 challenge.
# Note: mandatory for wildcard certificate generation.
[acme.dnsChallenge]
provider = "ovh"
delayBeforeCheck = 300
[[acme.domains]]
   main = "spotair.org"
[[acme.domains]]
   main = "*.spotair.org"
